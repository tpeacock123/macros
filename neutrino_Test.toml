[neut]

number_of_events = 1000000 # the number of probe interactions to simulate

# cross_section_table_path = "../data" # this can be used to override $NEUT_CRSPATH

# verbosity = "loud"
# verbosity = "quiet"
verbosity = "very_quiet"

#rng_seed = "time"
rng_seed = "file"

output_format = "neutroot"
# output_format = "NuHepMC"

simulation_mode = "neutrino" # This option includes electron scattering
#simulation_mode = "others"

[neut.vertex]

# position_type options:
#
position_type = "origin" # place the vertex at [0.0, 0.0, 0.0]
#
# position_type = "fixed" # must be accompanied by position
# position =  [0.0, 0.0, 0.0]
#
# position_type = "random" # must be accompanied by radius
# radius =  100.5

[neut.probe]

# must be one of numu(bar), nue(bar), nutau(bar)
species = "neutrino"
throwinke = "false"

# direction_type options:
#
direction_type = "z" # probe approaches target along [0.0, 0.0, 1.0]
#
# direction_type = "fixed" # probe approaches target along vector specified by direction
# direction [0.0, 0.0, 1.0] # same as "z"
#
# direction_type = "random" # probe approaches target isotropically

# energy_spectrum_type options:
#
# energy_spectrum_type = "fixed" # set fixed probe energy with "energy_mev"
# energy_mev = 600.0
#
energy_spectrum_type = "uniform" # set energy range for uniform random energy with "energy_range_mev" 
energy_range_mev = [0.0, 1500.0] 
#
# energy_spectrum_type = "root"
# energy_histogram = [ "/path/to/longlonglong/directory/name/with/longlonglonglonglonglonglonglonglong/root/file/name.root", "myhist", "mev"]

[neut.target]

# example for H20, two free protons and an oxygen nuclei.
num_nucleons = 12
num_bound_protons = 6
num_free_protons = 0

[neut.target.hadron_rescattering]

nucleon_effective_mass = "on"
FSI_pauli_blocking_scaling = 1.0

# pion_model_low_energy = "salcedo"
pion_model_low_energy = "tuned"

# pion_model_high_energy = "salcedo"
pion_model_high_energy = "proton_neutron_separated"

# pion_kinematic_model = "isotropic_decay"
pion_kinematic_model = "SAID"

pion_coulomb_correction = "off"

pion_rescattering = "on"
pion_rescattering_nuclear_model = "data_driven"
# pion_rescattering_nuclear_model = "lfg"

nucleon_rescattering = "on"
nucleon_rescattering_nuclear_model = "lfg"
# nucleon_rescattering_nuclear_model = "gfg"

[neut.target.hadron_rescattering.pion_cross_sections]

qe = 1.069
qe_high = 1.824
inelastic = 1.002
absorption = 1.404
coherent = 1.0
charge_exchange = 0.697
charge_exchange_high = 1.800

qe_fraction = 1.0
coh_fraction = 0.0
charge_exchange_fraction = 0.0

mean_free_path = 1.0

[neut.target.hadron_rescattering.nucleon_cross_sections]

mean_free_path = 1
elastic = 1
single_pi_prod = 1
double_pi_prod = 1

[neut.target.nuclear_effects]

fermi_motion = "on"

pauli_blocking = "on"
# N.B. this isn't really equivalent to turning off PB as the input HTs already have PB included
pauli_blocking_2p2h = "on"
pauli_blocking_fsi = "on"

nucleon_absorption_and_pion_ejection = "on"
deexcitation = "o16_deexcitation"

# formation_length = "on"
# formation_length = "off"
formation_length = "on_except_qe"
# formation_length = "on_multpi_DIS"
formation_zone_scat_parameter = 0.08

[neut.interaction_model]

mode_choice_type = "normal" # choose according to nominal cross-section prediction
# mode_choice_type = "rescaled" # read mode rescalings from neut.interaction_model.mode_rescaling table
# mode_choice_type = "single" # set a single NEUT mode to simulate with "mode"

# mode = "CC_QE_nu"
# mode = "CC_2p2h_nu"
# mode = "CC_RES_ppi+_nu"
# mode = "CC_RES_ppi0_nu"
# mode = "CC_RES_npi+_nu"
# mode = "CC_COH_nu"
# mode = "CC_DIF_nu"
# mode = "CC_eta_nu"
# mode = "CC_kaon_nu"
# mode = "CC_1gamma_nu"
# mode = "CC_multi_pi_nu"
# mode = "CC_DIS_nu"

# mode = "NC_elastic_free_p_nu"
# mode = "NC_elastic_bound_p_nu"
# mode = "NC_elastic_n_nu"
# mode = "NC_RES_npi0_nu"
# mode = "NC_RES_ppi0_nu"
# mode = "NC_RES_ppi-_nu"
# mode = "NC_RES_npi+_nu"
# mode = "NC_COH_nu"
# mode = "NC_DIF_nu"
# mode = "NC_eta_n_nu"
# mode = "NC_eta_p_nu"
# mode = "NC_kaon_n_nu"
# mode = "NC_kaon_p_nu"
# mode = "NC_multi_pi_nu"
# mode = "NC_1gamma_n_nu"
# mode = "NC_1gamma_p_nu"
# mode = "NC_DIS_nu"

# mode = "CC_QE_free_proton_nubar"
# mode = "CC_QE_bound_proton_nubar"
# mode = "CC_2p2h_nubar"
# mode = "CC_RES_npi-_nubar"
# mode = "CC_RES_ppi0_nubar"
# mode = "CC_RES_ppi-_nubar"
# mode = "CC_COH_nubar"
# mode = "CC_DIF_nubar"
# mode = "CC_eta_nubar"
# mode = "CC_kaon_nubar"
# mode = "CC_1gamma_nubar"
# mode = "CC_multi_pi_nubar"
# mode = "CC_DIS_nubar"

# mode = "NC_elastic_free_p_nubar"
# mode = "NC_elastic_bound_p_nubar"
# mode = "NC_elastic_n_nubar"
# mode = "NC_RES_npi0_nubar"
# mode = "NC_RES_ppi0_nubar"
# mode = "NC_RES_ppi-_nubar"
# mode = "NC_RES_npi+_nubar"
# mode = "NC_COH_nubar"
# mode = "NC_DIF_nubar"
# mode = "NC_eta_n_nubar"
# mode = "NC_eta_p_nubar"
# mode = "NC_kaon_n_nubar"
# mode = "NC_kaon_p_nubar"
# mode = "NC_1gamma_n_nubar"
# mode = "NC_1gamma_p_nubar"
# mode = "NC_multi_pi_nubar"
# mode = "NC_DIS_nubar"

[neut.interaction_model.mode_rescaling]

# quotes required for keys with +/- characters
"CC_QE_nu" = 1.0
"CC_2p2h_nu" = 1.0
"CC_RES_ppi+_nu" = 1.0
"CC_RES_ppi0_nu" = 1.0
"CC_RES_npi+_nu" = 1.0
"CC_COH_nu" = 1.0
"CC_DIF_nu" = 1.0
"CC_eta_nu" = 1.0
"CC_kaon_nu" = 1.0
"CC_1gamma_nu" = 1.0
"CC_multi_pi_nu" = 1.0
"CC_DIS_nu" = 1.0

"NC_elastic_free_p_nu" = 1.0
"NC_elastic_bound_p_nu" = 1.0
"NC_elastic_n_nu" = 1.0
"NC_RES_npi0_nu" = 1.0
"NC_RES_ppi0_nu" = 1.0
"NC_RES_ppi-_nu" = 1.0
"NC_RES_npi+_nu" = 1.0
"NC_COH_nu" = 1.0
"NC_DIF_nu" = 1.0
"NC_eta_n_nu" = 1.0
"NC_eta_p_nu" = 1.0
"NC_kaon_n_nu" = 1.0
"NC_kaon_p_nu" = 1.0
"NC_multi_pi_nu" = 1.0
"NC_1gamma_n_nu" = 1.0
"NC_1gamma_p_nu" = 1.0
"NC_DIS_nu" = 1.0

"CC_QE_free_proton_nubar" = 1.0
"CC_QE_bound_proton_nubar" = 1.0
"CC_2p2h_nubar" = 1.0
"CC_RES_npi-_nubar" = 1.0
"CC_RES_ppi0_nubar" = 1.0
"CC_RES_ppi-_nubar" = 1.0
"CC_COH_nubar" = 1.0
"CC_DIF_nubar" = 1.0
"CC_eta_nubar" = 1.0
"CC_kaon_nubar" = 1.0
"CC_1gamma_nubar" = 1.0
"CC_multi_pi_nubar" = 1.0
"CC_DIS_nubar" = 1.0

"NC_elastic_free_p_nubar" = 1.0
"NC_elastic_bound_p_nubar" = 1.0
"NC_elastic_n_nubar" = 1.0
"NC_RES_npi0_nubar" = 1.0
"NC_RES_ppi0_nubar" = 1.0
"NC_RES_ppi-_nubar" = 1.0
"NC_RES_npi+_nubar" = 1.0
"NC_COH_nubar" = 1.0
"NC_DIF_nubar" = 1.0
"NC_eta_n_nubar" = 1.0
"NC_eta_p_nubar" = 1.0
"NC_kaon_n_nubar" = 1.0
"NC_kaon_p_nubar" = 1.0
"NC_1gamma_n_nubar" = 1.0
"NC_1gamma_p_nubar" = 1.0
"NC_multi_pi_nubar" = 1.0
"NC_DIS_nubar" = 1.0

[neut.interaction_model.radiative_corrections]

model = "off"
gamma_attach_fraction = 0.1
egamma_low_threshold = 10
gamma_angular_distribution = "exp_decay"
# gamma_angular_distribution = "isotropic"

[neut.interaction_model.electron]

q2_threshold_MeV = 10000
coulomb = { enabled = "on", use_ema = "off" }
q3_dependent_eb = { enabled = "off", gradient = 0, intercept = 0 }

[neut.interaction_model.QE]

#model = "nieves" # use SF model by ueno-mori for NC (unrecommend)
#model = "nieves_furmanski_abe" # use SF model by frumanski-abe for NC
model = "rome" # Benhar SF
# model = "llewelyn-smith"
#model = "rmf"

erpa = "off" # incompatible with model = "nieves", use nieves.rpa = "on" instead

kappa = 1.0

second_class_currents_vector_scale = 0.0
second_class_currents_axial_scale = 0.0
pseudo_scalar_scale = 1

pionless_delta_decay = "off"
pionless_delta_decay_fraction = 0.0

[neut.interaction_model.QE.rmf]
# Nuclear potential for the RDIWA model. By default ED-RMF is used.
potential = "edrmf"

# If an event has a missing energy above the src_Emiss_cut, then it 
# will be an SRC event and produce an extra nucleon.
src_Emiss_cut = 80

[neut.interaction_model.QE.rome]

# Set from nuclear target if not overriden here
fermi_surface_for_pauli_mev = -1

# Shift SF inputs along the separation energy axis
separation_energy_shift_gev = 0

# Behavior if chosen separation energy for event is unphysical
separation_energy_negative_behavior = "pin_to_0"
# separation_energy_negative_behavior = "redraw_from_sf"

# Fraction of 'other' nucleon in correlated
# pair which is the same particle type, i.e. if this is set to 
# 0.3 then 30% of correlated pair events will be NN and 70% will 
# be the default np. Taken as 5% from statements in electron scattering, saying np
# states dominates pp and nn states by factor 20, Affect both SF and ED-RMF model
NN_pair_fraction = 0.05

# Defaults for spectral function model for SRC definition (MeV)
maximum_energy = 100
maximum_momentum = 300

# Default value is 0, there are tables for -0.08 so it will work as well
strange_axial_coupling = 0.0

[neut.interaction_model.QE.nieves]

nuclear_model = "lfg"
rpa = "on"

rpa_parameters.fp0in = 0.33
rpa_parameters.fp0ex = 0.45
rpa_parameters.fstar = 2.13
rpa_parameters.af = 1.0
rpa_parameters.pilambda = 1200.0
rpa_parameters.cr0 = 2.0
rpa_parameters.rholambda = 2500
rpa_parameters.gp = 0.63
rpa_parameters.xmpi = 139.57
rpa_parameters.xmrho = 775.4
rpa_parameters.irel = 1.0

binding_energy = "on"
binding_energy_shift = "on"

[neut.interaction_model.QE.vector_form_factors]

# cc_form = "dipole"
cc_form = "BBBA05"
# cc_form = "BBBA07"

# "scaling": scale cross section to CCQE. Unrecommended.
# nc_form = "scale"
# nc_form = "dipole"
nc_form = "BBBA05"

# this might be used for seconf-class form factor.
# needs to be specified even if we choose BBBA.
dipole.vector_mass = 0.84

[neut.interaction_model.QE.axial_form_factors]

form = "dipole"
# form = "BBBA07"
# form = "two_component"
# form = "three_component"
# form = "z_expansion"

[neut.interaction_model.QE.axial_form_factors.dipole]

axial_mass = 1.21
nc_axial_mass = 1.21

[neut.interaction_model.QE.axial_form_factors.n_component]

# 2/3 component, TN 315 p 25
# ANL/BNL 'fixed' fit
alpha = 0.23
beta = 1.22
gamma = 0.44
theta = -0.26

[neut.interaction_model.QE.axial_form_factors.z_expansion]
# Z-expansion TN 315 p 21 <3GeV as recommended
# Use official z-expansion parameters, not Patrick's results

pnt = 8
q4 = 0
t0 = -0.280
tc = 0.1764

a0 = 0.5
a1 = 2.28
a2 = 0.26
a3 = -5.20
a4 =  2.60
a5 =  0.5
a6 =  0.5
a7 =  0.5
a8 =  0.5
a9 =  0.5

[neut.interaction_model.2p2h]

#model = "nieves_table"
model = "nieves_hadron_tensor"

qval = "zero"
# qval = "r-dependent"

[neut.interaction_model.ResPP]

model = "rein_sehgal"
#model = "kabirnezhad"
#model = "dcc"

[neut.interaction_model.ResPP.rein_sehgal]

# form_factors = "originalFF"
form_factors = "graczyk_sobczyk"

originalFF.nr_type = "original"
# originalFF.nr_type = "halved"

axial_mass_res_non_pi = 1.21
axial_mass = 0.95
vector_mass = 0.84
ca5 = 1.01
nonresonant_background_scale = 1.3

[neut.interaction_model.ResPP.rein_sehgal.ejection]

# model options:
# isotropic
# delta_only
# all_resonances
# delta_plus_isotropic
model = "delta_plus_isotropic"

rop3p3_mult = 1
rom3m3_mult = 1
rop1p1_mult = 1
rom1m1_mult = 1
rop3p1_mult = 1
rom1m3_mult = 1
rop3m1_mult = 1
rop1m3_mult = 1

[neut.interaction_model.ResPP.kabirnezhad]

axial_mass = 1.06
bkg_axial_mass = 1.03
vector_mass = 0.84
ca5 = 1.02

[neut.interaction_model.COH]

# model = "rein_sehgal"
# model = "kartavtsev"
model = "berger_sehgal"

axial_mass = 1
radius = 1.0
fa1 = 0.0
fa2 = 0.0

[neut.interaction_model.DIF]

model = "rein_w_cut"
# model = "rein"

axial_mass = 1.1
nuclear_volume = 7.0

[neut.interaction_model.MPiDIS]

# pdf_set = "grv94_di"
pdf_set = "grv98_lo"

multiplicity_model = "neut"
# multiplicity_model = "fit_to_bc"
# multiplicity_model = "AGKY"

[neut.interaction_model.MPiDIS.BodekYang]

# correction_version = "BY19"
correction_version = "BY05"
# correction_version = "off"

low_W_K_factor = "off"
force_ax_vec_equal = "off"

seaqbar_factor = 1
rlong_variation = 0

[neut.interaction_model.CASCADE]
model =  "default" # options are "none",""default", "incl_placeholder"

[neut.interaction_model.tauola]
decay_mode = "all"
polarity_mode = "taupol" # calculated by taupol.f
#polarity_mode = "fixed" # require to set "polarity" 
#polarity = [0.0, 0.0, 1.0]
